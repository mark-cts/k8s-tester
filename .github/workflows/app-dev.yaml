name: App Build/Deploy Dev

on:
  push:
    branches:
      - main
    paths:
      - app/**

env:
  GITHUB_SHA: ${{ github.sha }} 
  GITHUB_REF: ${{ github.ref }} 
  IMAGE: hello-world
  REGISTRY_HOSTNAME: europe-west1-docker.pkg.dev/markbox-cts/images
  PROJECT_ID: markbox-cts
  ENVIRONMENT: dev
  CLUSTER_NAME: tester
  CLUSTER_REGION: europe-west1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      # setup caching/docker build agent
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # setup gcloud for gcr auth
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
          credentials_file_path: /tmp/key.json
      - run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
      - name: Build
        run: |
          docker build -t ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:${{ env.GITHUB_SHA }} app/
      - name: login
        uses: docker/login-action@v1
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: push
        run: |
          docker push ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:${{ env.GITHUB_SHA }}

  commit:
    needs: build
    name: Commit
    runs-on: ubuntu-latest
    outputs:
      new_sha: ${{ steps.setout.outputs.commitsha }}
      sha: ${{ steps.push.outputs.commit_sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: imranismail/setup-kustomize@v1
      - name: set image
        run: |
          cd infra/k8s/overlays/${{ env.ENVIRONMENT }}/
          kustomize edit set image ${{ env.IMAGE }}=${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:${{ env.GITHUB_SHA }}
          kustomize build .
      - name: push
        id: push
        uses: EndBug/add-and-commit@v7
        with:
          add: infra/k8s/overlays/${{ env.ENVIRONMENT }}/kustomization.yaml
          author_name: "ci"
          author_email: "ci@gingerninja.co"
          message: "Set image for ${{ env.IMAGE }} in ${{ env.ENVIRONMENT }} to ${{ env.GITHUB_SHA }}"
      - name: setout
        run: |
          commitsha="${{ steps.push.outputs.commit_sha }}"
          echo $commitsha
          echo "::set-output name=commitsha::$commitsha"
  
  deploy:
    needs: commit
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: azure/setup-kubectl@v1
      - uses: imranismail/setup-kustomize@v1
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
          credentials_file_path: /tmp/key.json
      - name: check
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.CLUSTER_REGION }} --project ${{ env.PROJECT_ID }}
          newsha=$(kubectl get -n flux-system kustomization hello-world-dev -o=jsonpath='{.status.lastAppliedRevision}' | cut -d "/" -f 2)
          commitshort="${{ needs.commit.outputs.new_sha }}"
          echo "${{ needs.commit.outputs.sha }}"
          if [ -z "${commitshort}"]
          then
              commitshort=$(git rev-parse main)
          fi
          echo "$commitshort"
          sha="$(git rev-parse ${commitshort})"
          echo "Cluster currently has ${newsha} deployed."
          echo "Waiting for ${sha} to be deployed."
          echo "Cluster : Git"
          until [ "$newsha" == "$sha" ]
          do
                  echo "Compared: $sha : $newsha"
                  newsha=$(kubectl get -n flux-system kustomization hello-world-dev -o=jsonpath='{.status.lastAppliedRevision}' | cut -d "/" -f 2)
                  echo "Not yet synced. Waiting for 5s.."
                  sleep 5
          done
          echo "Reconcile Complete"
          kubectl wait -n flux-system kustomization/hello-world-dev --for=condition=healthy --timeout=2m
        # we can add rollback here in future for failures
