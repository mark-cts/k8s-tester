name: App Build/Deploy Dev

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - app/**

env:
  IMAGE: hello-world
  NONPROD_REGISTRY_HOSTNAME: europe-west1-docker.pkg.dev/markbox-cts/images
  PROJECT_ID: markbox-cts
  ENVIRONMENT: dev
  CLUSTER_NAME: tester
  CLUSTER_REGION: europe-west1
  APP_NAME: hello-world
  ENV: dev

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      # setup caching/docker build agent
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # setup gcloud for gcr auth
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
          credentials_file_path: /tmp/key.json
      - run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
      - name: Build
        run: |
          docker build -t ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }} app/
      - name: login
        uses: docker/login-action@v1
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: push
        run: |
          docker push ${{ env.NONPROD_REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }}

  update-env:
    needs: build
    name: Update Image
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.commit.outputs.commit_sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: imranismail/setup-kustomize@v1
      - name: set image
        run: |
          cd infra/k8s/overlays/${{ env.ENV }}/
          kustomize edit set image ${{ env.IMAGE }}=${{ env.NONPROD_REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }}
          kustomize build .
      - name: commit
        id: commit
        uses: EndBug/add-and-commit@v7
        with:
          add: infra/k8s/overlays/${{ env.ENV }}/kustomization.yaml
          author_name: "ci"
          author_email: "ci@gingerninja.co"
          message: "Set image for ${{ env.IMAGE }} in ${{ env.ENV }} to ${{ github.sha }}-${{ github.run_number }}"
  
  deploy:
    needs: update-env
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: azure/setup-kubectl@v1
      - uses: imranismail/setup-kustomize@v1
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
          credentials_file_path: /tmp/key.json
      - name: get-gke-creds
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_REGION }}
      - name: check
        run: |
          newsha=$(kubectl get -n ${{ env.APP_NAME }}-${{ env.ENV }} kustomization/flux-kustomization -o=jsonpath='{.status.lastAppliedRevision}' | cut -d "/" -f 2)
          git pull
          commitshort="${{ needs.update-env.outputs.sha }}"
          sha="$(git rev-parse ${commitshort})"
          echo "Cluster currently has ${newsha} deployed."
          echo "Waiting for ${sha} to be deployed."
          echo "Cluster : Git"
          counter=0
          until [[ "$newsha" == "$sha" || $counter -gt 120 ]] # 120x5 == 10mins
          do
                  echo "Compared: $newsha : $sha"
                  newsha=$(kubectl get -n ${{ env.APP_NAME }}-${{ env.ENV }} kustomization/flux-kustomization -o=jsonpath='{.status.lastAppliedRevision}' | cut -d "/" -f 2)
                  echo "Not yet synced. Waiting for 5s.."
                  sleep 5
                  counter=$(($counter+1))
          done
          if [[ $counter -gt 120 ]]
          then
                  echo ""
                  echo "*Deployment failed. Requires investigation.*"
                  # look at rollback here
          else
                  echo "Reconcile Complete"
          fi
          kubectl wait -n ${{ env.APP_NAME }}-${{ env.ENV }} kustomization/flux-kustomization --for=condition=healthy --timeout=5m
        # Add rollback here
        # add integration tests here too
