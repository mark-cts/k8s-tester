name: App Deploy UAT
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["App Build/Deploy Dev"]
    branches: [main]
    types:
      - completed
env:
  IMAGE: hello-world
  NONPROD_REGISTRY_HOSTNAME: europe-west1-docker.pkg.dev/markbox-cts/images
  PROD_REGISTRY_HOSTNAME: europe-west1-docker.pkg.dev/markbox-cts/images-prod
  PROJECT_ID: markbox-cts
  PREV_ENV: dev
  ENV: uat
  APP_NAME: hello-world
  CLUSTER_NAME: tester
  CLUSTER_REGION: europe-west1
jobs:
  check-env:
    name: Check environment
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs: 
      check: ${{ steps.check.outputs.check }}
    steps:
      - uses: actions/checkout@v2
      - name: check # we dont want to carry on if that env doesnt exist yet
        id: check
        run: |
          dir="infra/k8s/overlays/${{ env.ENV }}/"
          if [ ! -d "$dir" ]
          then
            echo "Env does not exist, skipping."
            check="false"
          else
            echo "Env exists"
            check="true"
          fi
          echo "::set-output name=check::$check"
  update-env:
    name: Update Image
    needs: check-env
    if: ${{ needs.check-env.outputs.check == 'true' && (github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' ) }}
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.commit.outputs.commit_sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: imranismail/setup-kustomize@v1
      - name: set image
        run: |
          export IMAGE_TAG=$(yq e '.images' infra/k8s/overlays/${{ env.PREV_ENV }}/kustomization.yaml -o=json | jq -r ".[] | select(.name==\"${{ env.IMAGE }}\") | .newTag")
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          cd infra/k8s/overlays/${{ env.ENV }}/
          kustomize edit set image ${{ env.IMAGE }}=${{ env.NONPROD_REGISTRY_HOSTNAME }}/${{ env.IMAGE }}:$IMAGE_TAG
          kustomize build .
      - name: commit
        id: commit
        uses: EndBug/add-and-commit@v7
        with:
          add: infra/k8s/overlays/${{ env.ENV }}/kustomization.yaml
          author_name: "ci"
          author_email: "ci@gingerninja.co"
          message: "Set image for ${{ env.IMAGE }} in ${{ env.ENV }} to ${{ env.IMAGE_TAG }}"
  
  deploy:
    needs: update-env
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: azure/setup-kubectl@v1
      - uses: imranismail/setup-kustomize@v1
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
          credentials_file_path: /tmp/key.json
      - name: get-gke-creds
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_REGION }}
      - name: check
        run: |
          newsha=$(kubectl get -n flux-system kustomization/${{ env.APP_NAME }}-${{ env.ENV }} -o=jsonpath='{.status.lastAppliedRevision}' | cut -d "/" -f 2)
          git pull
          commitshort="${{ needs.update-env.outputs.sha }}"
          sha="$(git rev-parse ${commitshort})"
          if [ -z "$sha" ]
          then
            sha=$(git rev-parse main)
          fi
          echo "Cluster currently has ${newsha} deployed."
          echo "Waiting for ${sha} to be deployed."
          echo "Cluster : Git"
          counter=0
          until [[ "$newsha" == "$sha" || $counter -gt 120 ]] # 120x5 == 10mins
          do
                  echo "Compared: $newsha : $sha"
                  newsha=$(kubectl get -n flux-system kustomization/${{ env.APP_NAME }}-${{ env.ENV }} -o=jsonpath='{.status.lastAppliedRevision}' | cut -d "/" -f 2)
                  echo "Not yet synced. Waiting for 5s.."
                  sleep 5
                  counter=$(($counter+1))
          done
          if [[ $counter -gt 120 ]]
          then
                  echo ""
                  echo "*Deployment failed. Requires investigation.*"
                  # look at rollback here
          else
                  echo "Reconcile Complete"
          fi
          kubectl wait -n flux-system kustomization/${{ env.APP_NAME }}-${{ env.ENV }} --for=condition=healthy --timeout=5m
        # Add rollback here
        # add integration tests here too