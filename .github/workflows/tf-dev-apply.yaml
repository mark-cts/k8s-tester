name: Terraform Dev Apply
on:
  push:
    branches:
      - main
    paths:
      - infra/tf/terraform/**
jobs:
  matrix:
    runs-on: ubuntu-latest
    name: Compile tf files
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            infra/tf/terraform/**
      - id: set-matrix
        run: |
          IFS=$'\n'
          x="${{ steps.changed-files-specific.outputs.all_changed_and_modified_files }}"
          echo $x
          for direct in $x
          do
                  dirname=$(dirname -- ${direct})
                  echo "${dirname}"
                  echo "${dirname}" >> list
          done
          LIST=$(cat list | uniq)
          echo $LIST

          matrix=$(jq -c -n --arg inarr "$LIST" '{ plans: $inarr | split(" ") }')
          echo $matrix
          echo $matrix | jq .plans
          echo "::set-output name=matrix::$matrix"
  check-matrix:
    runs-on: ubuntu-latest
    name: Test JSON
    needs: matrix
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml
      - name: Check matrix definition
        run: |
          matrix='${{needs.matrix.outputs.matrix}}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml
  apply:
    runs-on: ubuntu-latest
    needs: matrix
    name: "Terraform Apply"
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
          terraform_wrapper: false
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.31.4
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
    
      - name: Set yaml for DEV
        run: |
          export MODULE=$(basename ${{ matrix.plans }} | cut -f 1 -d '.' )
          SHA=${{ github.sha }} yq e '.auto_module_versions.env(MODULE) |= env(SHA)' -i infra/tf/environments/dev.yaml
      - name: Terragrunt Apply
        id: apply
        run: |
          filename=$(basename ${{ matrix.plans }} | cut -f 1 -d '.' )
          echo "Running Apply"
          cd infra/tf/
          TG_ENVIRONMENT=dev terragrunt run-all apply -auto-approve --terragrunt-working-dir terraform/ --terragrunt-include-external-dependencies --terragrunt-non-interactive
      - name: Terragrunt Apply Status
        if: steps.apply.outcome == 'failure'
        run: exit 1
      - name: commit dev
        uses: EndBug/add-and-commit@v7
        with:
          add: infra/tf/environments/dev.yaml
          author_name: "ci"
          author_email: "ci@gingerninja.co"
          message: "Deploy changes to DEV from ${{ github.sha }}"
      - name: Set yaml for UAT
        run: |
          export MODULE=$(basename ${{ matrix.plans }} | cut -f 1 -d '.' )
          SHA=${{ github.sha }} yq e '.auto_module_versions.env(MODULE) |= env(SHA)' -i infra/tf/environments/uat.yaml
      - name: commit uat
        uses: EndBug/add-and-commit@v7
        with:
          add: infra/tf/environments/dev.yaml
          author_name: "ci"
          author_email: "ci@gingerninja.co"
          message: "Deploy changes to UAT from ${{ github.sha }}"
          push: false
      - name: Create PR
        id: pr-uat
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main # branch to merge into
          commit-message: Deploy changes to UAT from ${{ github.sha }}
          committer: ci <ci@gingerninja.co>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: tf-uat
          delete-branch: true
          title: '[CI] Deploy changes to UAT from ${{ github.sha }}'
          body: |
            *Automated PR*
            This PR is created by CI

            Deploying ${{ github.sha }} to UAT
          labels: |
            automated
          assignees: Bltt
          reviewers: mark-cts
          team-reviewers: |
            owners
          draft: false
